
- name: Configuration of master node
  hosts: masters
  become: true
  vars_files:
    - secrets.yaml
  tasks:
    - name: Gather facts
      ansible.builtin.setup:
      become: no

    - name: Check if Kubernetes has already been initialized
      ansible.builtin.stat:
        path: /etc/kubernetes/admin.conf
      register: kubeadm_init_status

    - name: Initialize Kubernetes
      ansible.builtin.command:
        cmd: |
          kubeadm init \
          --control-plane-endpoint={{ ansible_default_ipv4.address }}\
          --node-name={{ ansible_hostname }} \
          --pod-network-cidr=10.244.0.0/16
      when: not kubeadm_init_status.stat.exists

    - name: Extract join command
      shell: |
        grep -A 1 "kubeadm join" /tmp/kubeadm_init_output.txt | tail -n 2 > /tmp/kubeadm_join_command.sh
      when: not kubeadm_init_status.stat.exists
      register: join_command

    - name: Ensure kube config directory exists
      ansible.builtin.file:
        path: "{{ lookup('env', 'HOME') }}/.kube"
        state: directory
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"
        mode: '0755'
      when: kubeadm_init_status.stat.exists
      become: no

    - name: Check if kube config already exists
      ansible.builtin.stat:
        path: "{{ lookup('env', 'HOME') }}/.kube/config"
      register: kube_config_status
      become: no

    - name: Copy kube config to user home
      ansible.builtin.copy:
        src: /etc/kubernetes/admin.conf
        dest: "{{ lookup('env', 'HOME') }}/.kube/config"
        remote_src: yes
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"
        mode: '0644'
      when: 
        - kubeadm_init_status.stat.exists
        - not kube_config_status.stat.exists
      become: no


