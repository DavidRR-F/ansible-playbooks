---
- name: Initialize master and worker nodes
  hosts: k8s
  become: true
  tasks:
    - name: Disable UFW Firewall
      ansible.builtin.service:
        name: ufw
        state: stopped
        enabled: false

    - name: Disable SWAP
      shell: |
        swapoff -a 

    - name: Disable SWAP in fstab
      ansible.builtin.lineinfile:
        path: /etc/fstab
        regexp: ^.*swap.*$
        line: '#\0'
        backrefs: true

    - name: Enable IPv4 Forwarding in sysctl
      ansible.builtin.lineinfile:
        path: /etc/sysctl.conf
        regexp: ^.*net.ipv4.ip_forwarding.*$
        line: 'net.ipv4.ip_forwarding = 1'

    - name: Install Apt Dependencies
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - containerd
          - curl
          - gnupg
        state: present
        update_cache: yes

    - name: Create Containerd Configuration Directory
      ansible.builtin.file:
        path: /etc/containerd
        mode: '0755'
        state: directory

    - name: Check if Containerd configuration file exists
      ansible.builtin.stat:
        path: /etc/containerd/config.toml
      register: containerd_config

    - name: Initialize Containerd Configuration
      ansible.builtin.shell: |
        containerd config default > /etc/containerd/config.toml
      register: containerd_config_created
      when: not containerd_config.stat.exists

    - name: Edit Containerd Configuration
      ansible.builtin.lineinfile:
        path: /etc/containerd/config.toml
        regexp: ^.*SystemdCgroup.*$
        line: '            SystemdCgroup = true'

    - name: Restart Containerd
      ansible.builtin.systemd:
        name: containerd
        state: restarted
      when: containerd_config_created.stat.exists

    - name: Add Netfilter Kernel Module
      ansible.builtin.lineinfile:
        path: /etc/modules-load.d/k8s.conf
        line: br_netfilter
        create: yes

    - name: Load Netfilter Kernel Module
      community.general.modprobe:
        name: br_netfilter
        state: present
        persistent: present

    - name: Ensure net.bridge.bridge-nf-call-iptables is set
      ansible.builtin.lineinfile:
        path: /etc/sysctl.d/k8s.conf
        line: 'net.bridge.bridge-nf-call-iptables = 1'
        create: yes

    - name: Ensure net.ipv4.ip_forward is set
      ansible.builtin.lineinfile:
        path: /etc/sysctl.d/k8s.conf
        line: 'net.ipv4.ip_forward = 1'
        create: yes

    - name: Ensure net.bridge.bridge-nf-call-ip6tables is set
      ansible.builtin.lineinfile:
        path: /etc/sysctl.d/k8s.conf
        line: 'net.bridge.bridge-nf-call-ip6tables = 1'
        create: yes

    - name: Apply sysctl parameters
      ansible.builtin.shell: sysctl --system

    - name: Create Keyring Directory
      ansible.builtin.file:
        path: /etc/apt/keyrings
        mode: '0755'
        state: directory

    - name: Check if Kubernetes GPG keyring exists
      ansible.builtin.stat:
        path: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      register: kubernetes_keyring_stat

    - name: Add Kubernetes GPG Key
      ansible.builtin.shell: |
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | \
        gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      when: not kubernetes_keyring_stat.stat.exists

    - name: Add Kubernetes Repository
      ansible.builtin.shell: |
        echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /" | \
        tee /etc/apt/sources.list.d/kubernetes.list
      when: not kubernetes_keyring_stat.stat.exists

    - name: Install Packages
      ansible.builtin.apt:
        name:
          - kubeadm
          - kubelet
          - kubectl
        state: present
        update_cache: yes

    - name: Start kubelet
      ansible.builtin.service:
        name: kubelet
        enabled: true
        state: started
